// <auto-generated />
using System;
using IgnitechSkolica.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace IgnitechSkolica.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240723093245_InitialSeedData")]
    partial class InitialSeedData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.20");

            modelBuilder.Entity("IgnitechSkolica.Models.Grade", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("TEXT");

                    b.Property<int>("SubjectId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Value")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("SubjectId");

                    b.ToTable("Grades");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedOn = new DateTime(2024, 7, 23, 11, 32, 45, 502, DateTimeKind.Local).AddTicks(228),
                            SubjectId = 1,
                            Value = 95
                        },
                        new
                        {
                            Id = 2,
                            CreatedOn = new DateTime(2024, 7, 23, 11, 32, 45, 502, DateTimeKind.Local).AddTicks(272),
                            SubjectId = 2,
                            Value = 88
                        },
                        new
                        {
                            Id = 3,
                            CreatedOn = new DateTime(2024, 7, 23, 11, 32, 45, 502, DateTimeKind.Local).AddTicks(274),
                            SubjectId = 3,
                            Value = 70
                        },
                        new
                        {
                            Id = 4,
                            CreatedOn = new DateTime(2024, 7, 23, 11, 32, 45, 502, DateTimeKind.Local).AddTicks(276),
                            SubjectId = 3,
                            Value = 51
                        },
                        new
                        {
                            Id = 5,
                            CreatedOn = new DateTime(2024, 7, 23, 11, 32, 45, 502, DateTimeKind.Local).AddTicks(278),
                            SubjectId = 4,
                            Value = 55
                        },
                        new
                        {
                            Id = 6,
                            CreatedOn = new DateTime(2024, 7, 23, 11, 32, 45, 502, DateTimeKind.Local).AddTicks(280),
                            SubjectId = 5,
                            Value = 44
                        },
                        new
                        {
                            Id = 7,
                            CreatedOn = new DateTime(2024, 7, 23, 11, 32, 45, 502, DateTimeKind.Local).AddTicks(282),
                            SubjectId = 6,
                            Value = 33
                        },
                        new
                        {
                            Id = 8,
                            CreatedOn = new DateTime(2024, 7, 23, 11, 32, 45, 502, DateTimeKind.Local).AddTicks(284),
                            SubjectId = 6,
                            Value = 85
                        },
                        new
                        {
                            Id = 9,
                            CreatedOn = new DateTime(2024, 7, 23, 11, 32, 45, 502, DateTimeKind.Local).AddTicks(285),
                            SubjectId = 7,
                            Value = 90
                        },
                        new
                        {
                            Id = 10,
                            CreatedOn = new DateTime(2024, 7, 23, 11, 32, 45, 502, DateTimeKind.Local).AddTicks(287),
                            SubjectId = 7,
                            Value = 91
                        },
                        new
                        {
                            Id = 11,
                            CreatedOn = new DateTime(2024, 7, 23, 11, 32, 45, 502, DateTimeKind.Local).AddTicks(289),
                            SubjectId = 7,
                            Value = 99
                        },
                        new
                        {
                            Id = 12,
                            CreatedOn = new DateTime(2024, 7, 23, 11, 32, 45, 502, DateTimeKind.Local).AddTicks(291),
                            SubjectId = 8,
                            Value = 74
                        },
                        new
                        {
                            Id = 13,
                            CreatedOn = new DateTime(2024, 7, 23, 11, 32, 45, 502, DateTimeKind.Local).AddTicks(292),
                            SubjectId = 9,
                            Value = 66
                        },
                        new
                        {
                            Id = 14,
                            CreatedOn = new DateTime(2024, 7, 23, 11, 32, 45, 502, DateTimeKind.Local).AddTicks(294),
                            SubjectId = 9,
                            Value = 65
                        },
                        new
                        {
                            Id = 15,
                            CreatedOn = new DateTime(2024, 7, 23, 11, 32, 45, 502, DateTimeKind.Local).AddTicks(296),
                            SubjectId = 10,
                            Value = 67
                        },
                        new
                        {
                            Id = 16,
                            CreatedOn = new DateTime(2024, 7, 23, 11, 32, 45, 502, DateTimeKind.Local).AddTicks(298),
                            SubjectId = 10,
                            Value = 56
                        },
                        new
                        {
                            Id = 17,
                            CreatedOn = new DateTime(2024, 7, 23, 11, 32, 45, 502, DateTimeKind.Local).AddTicks(300),
                            SubjectId = 11,
                            Value = 50
                        },
                        new
                        {
                            Id = 18,
                            CreatedOn = new DateTime(2024, 7, 23, 11, 32, 45, 502, DateTimeKind.Local).AddTicks(301),
                            SubjectId = 11,
                            Value = 51
                        },
                        new
                        {
                            Id = 19,
                            CreatedOn = new DateTime(2024, 7, 23, 11, 32, 45, 502, DateTimeKind.Local).AddTicks(303),
                            SubjectId = 11,
                            Value = 52
                        },
                        new
                        {
                            Id = 20,
                            CreatedOn = new DateTime(2024, 7, 23, 11, 32, 45, 502, DateTimeKind.Local).AddTicks(305),
                            SubjectId = 11,
                            Value = 73
                        },
                        new
                        {
                            Id = 21,
                            CreatedOn = new DateTime(2024, 7, 23, 11, 32, 45, 502, DateTimeKind.Local).AddTicks(307),
                            SubjectId = 12,
                            Value = 81
                        },
                        new
                        {
                            Id = 22,
                            CreatedOn = new DateTime(2024, 7, 23, 11, 32, 45, 502, DateTimeKind.Local).AddTicks(308),
                            SubjectId = 12,
                            Value = 82
                        },
                        new
                        {
                            Id = 23,
                            CreatedOn = new DateTime(2024, 7, 23, 11, 32, 45, 502, DateTimeKind.Local).AddTicks(310),
                            SubjectId = 13,
                            Value = 83
                        },
                        new
                        {
                            Id = 24,
                            CreatedOn = new DateTime(2024, 7, 23, 11, 32, 45, 502, DateTimeKind.Local).AddTicks(312),
                            SubjectId = 13,
                            Value = 89
                        },
                        new
                        {
                            Id = 25,
                            CreatedOn = new DateTime(2024, 7, 23, 11, 32, 45, 502, DateTimeKind.Local).AddTicks(314),
                            SubjectId = 14,
                            Value = 91
                        },
                        new
                        {
                            Id = 26,
                            CreatedOn = new DateTime(2024, 7, 23, 11, 32, 45, 502, DateTimeKind.Local).AddTicks(315),
                            SubjectId = 15,
                            Value = 77
                        },
                        new
                        {
                            Id = 27,
                            CreatedOn = new DateTime(2024, 7, 23, 11, 32, 45, 502, DateTimeKind.Local).AddTicks(317),
                            SubjectId = 16,
                            Value = 75
                        },
                        new
                        {
                            Id = 28,
                            CreatedOn = new DateTime(2024, 7, 23, 11, 32, 45, 502, DateTimeKind.Local).AddTicks(319),
                            SubjectId = 16,
                            Value = 59
                        },
                        new
                        {
                            Id = 29,
                            CreatedOn = new DateTime(2024, 7, 23, 11, 32, 45, 502, DateTimeKind.Local).AddTicks(321),
                            SubjectId = 16,
                            Value = 71
                        });
                });

            modelBuilder.Entity("IgnitechSkolica.Models.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("FirstName")
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .HasColumnType("TEXT");

                    b.Property<string>("StudentCode")
                        .HasColumnType("TEXT");

                    b.Property<int>("TeacherId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("TeacherId");

                    b.ToTable("Students");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FirstName = "Tadej",
                            LastName = "Pogacar",
                            StudentCode = "ST00001",
                            TeacherId = 1
                        },
                        new
                        {
                            Id = 2,
                            FirstName = "Ante",
                            LastName = "Budimir",
                            StudentCode = "ST00002",
                            TeacherId = 2
                        },
                        new
                        {
                            Id = 3,
                            FirstName = "Ivan",
                            LastName = "Ljubicic",
                            StudentCode = "ST00003",
                            TeacherId = 3
                        },
                        new
                        {
                            Id = 4,
                            FirstName = "Mario",
                            LastName = "Ancic",
                            StudentCode = "ST00004",
                            TeacherId = 4
                        },
                        new
                        {
                            Id = 5,
                            FirstName = "Novak",
                            LastName = "Djokovic",
                            StudentCode = "ST00005",
                            TeacherId = 5
                        },
                        new
                        {
                            Id = 6,
                            FirstName = "Ivica",
                            LastName = "Zubac",
                            StudentCode = "ST00006",
                            TeacherId = 5
                        },
                        new
                        {
                            Id = 7,
                            FirstName = "Andrej",
                            LastName = "Kramaric",
                            StudentCode = "ST00007",
                            TeacherId = 3
                        },
                        new
                        {
                            Id = 8,
                            FirstName = "Donna",
                            LastName = "Vekic",
                            StudentCode = "ST00008",
                            TeacherId = 3
                        },
                        new
                        {
                            Id = 9,
                            FirstName = "Petra",
                            LastName = "Martic",
                            StudentCode = "ST00009",
                            TeacherId = 2
                        },
                        new
                        {
                            Id = 10,
                            FirstName = "Zulejka",
                            LastName = "Stefanini Tucan",
                            StudentCode = "ST000010",
                            TeacherId = 3
                        },
                        new
                        {
                            Id = 11,
                            FirstName = "Maca",
                            LastName = "Maradona",
                            StudentCode = "ST000011",
                            TeacherId = 4
                        });
                });

            modelBuilder.Entity("IgnitechSkolica.Models.Subject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<int>("StudentId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TeacherId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("StudentId");

                    b.HasIndex("TeacherId");

                    b.ToTable("Subjects");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Matematika 1",
                            StudentId = 1,
                            TeacherId = 1
                        },
                        new
                        {
                            Id = 2,
                            Name = "Matematika 3",
                            StudentId = 2,
                            TeacherId = 1
                        },
                        new
                        {
                            Id = 3,
                            Name = "Organizacija",
                            StudentId = 1,
                            TeacherId = 2
                        },
                        new
                        {
                            Id = 4,
                            Name = "Engleski 1",
                            StudentId = 1,
                            TeacherId = 3
                        },
                        new
                        {
                            Id = 5,
                            Name = "Engleski 3",
                            StudentId = 3,
                            TeacherId = 3
                        },
                        new
                        {
                            Id = 6,
                            Name = "Baze podataka 1",
                            StudentId = 3,
                            TeacherId = 4
                        },
                        new
                        {
                            Id = 7,
                            Name = "Programiranje 1",
                            StudentId = 4,
                            TeacherId = 4
                        },
                        new
                        {
                            Id = 8,
                            Name = "Poslovno odlucivanje",
                            StudentId = 5,
                            TeacherId = 5
                        },
                        new
                        {
                            Id = 9,
                            Name = "Komunikacija 1",
                            StudentId = 6,
                            TeacherId = 5
                        },
                        new
                        {
                            Id = 10,
                            Name = "Komunikacija 3",
                            StudentId = 5,
                            TeacherId = 5
                        },
                        new
                        {
                            Id = 11,
                            Name = "Osnove ekonomije 1",
                            StudentId = 7,
                            TeacherId = 2
                        },
                        new
                        {
                            Id = 12,
                            Name = "Osnove ekonomije 3",
                            StudentId = 8,
                            TeacherId = 2
                        },
                        new
                        {
                            Id = 13,
                            Name = "Poslovna ekonomija 1",
                            StudentId = 8,
                            TeacherId = 2
                        },
                        new
                        {
                            Id = 14,
                            Name = "Poslovna ekonomija 3",
                            StudentId = 9,
                            TeacherId = 2
                        },
                        new
                        {
                            Id = 15,
                            Name = "Financijska matematika 1",
                            StudentId = 10,
                            TeacherId = 1
                        },
                        new
                        {
                            Id = 16,
                            Name = "Financijska matematika 3",
                            StudentId = 11,
                            TeacherId = 1
                        });
                });

            modelBuilder.Entity("IgnitechSkolica.Models.Teacher", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("FirstName")
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .HasColumnType("TEXT");

                    b.Property<string>("TeacherCode")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Teachers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FirstName = "Ivan",
                            LastName = "Horvat",
                            TeacherCode = "TE00001"
                        },
                        new
                        {
                            Id = 2,
                            FirstName = "Veldin",
                            LastName = "Karic",
                            TeacherCode = "TE00002"
                        },
                        new
                        {
                            Id = 3,
                            FirstName = "Danijel",
                            LastName = "Poldrugac",
                            TeacherCode = "TE00003"
                        },
                        new
                        {
                            Id = 4,
                            FirstName = "Jasmin",
                            LastName = "Agic",
                            TeacherCode = "TE00004"
                        },
                        new
                        {
                            Id = 5,
                            FirstName = "Eduardo",
                            LastName = "Da Silva",
                            TeacherCode = "TE00005"
                        });
                });

            modelBuilder.Entity("IgnitechSkolica.Models.Grade", b =>
                {
                    b.HasOne("IgnitechSkolica.Models.Subject", "Subject")
                        .WithMany("Grades")
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("IgnitechSkolica.Models.Student", b =>
                {
                    b.HasOne("IgnitechSkolica.Models.Teacher", "Teacher")
                        .WithMany("Students")
                        .HasForeignKey("TeacherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Teacher");
                });

            modelBuilder.Entity("IgnitechSkolica.Models.Subject", b =>
                {
                    b.HasOne("IgnitechSkolica.Models.Student", "Student")
                        .WithMany("Subjects")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IgnitechSkolica.Models.Teacher", "Teacher")
                        .WithMany()
                        .HasForeignKey("TeacherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Student");

                    b.Navigation("Teacher");
                });

            modelBuilder.Entity("IgnitechSkolica.Models.Student", b =>
                {
                    b.Navigation("Subjects");
                });

            modelBuilder.Entity("IgnitechSkolica.Models.Subject", b =>
                {
                    b.Navigation("Grades");
                });

            modelBuilder.Entity("IgnitechSkolica.Models.Teacher", b =>
                {
                    b.Navigation("Students");
                });
#pragma warning restore 612, 618
        }
    }
}
